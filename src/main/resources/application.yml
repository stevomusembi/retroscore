spring:
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  security:
    user:
      name: user
      password: test
      roles: USER
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_WEB_CLIENT_ID}
            client-secret: ${GOOGLE_WEB_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
    provider:
      google:
        authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
        token-uri: https://www.googleapis.com/oauth2/v4/token
        user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
        user-name-attribute: sub

  jpa:
    hibernate:
      ddl-auto: update  # Use 'create-drop' for development, 'validate' for production
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  application:
    name: retroscore

server:
  address: 0.0.0.0
  port: 8080

management:
  endpoints:
    web:
      cors:
        allowed-origins: "*"
        allowed-methods: GET,POST,PUT,DELETE
        allowed-headers: "*"

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.web: DEBUG
    com.retroscore: DEBUG
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000  # 24 hours in milliseconds
  refresh-expiration: 604800000  # 7 days in milliseconds

app:
   oauth2:
     redirect-uri: retroscoreapp://auth/success
     error-redirect-uri: retroscoreapp://auth/error
